type = "scatter",
mode = "lines+markers",
name = "Recovered",
line = list(color = recovered_color),
marker = list(color = recovered_color)) %>%
plotly::add_trace(x = ~ date,
y = ~ death_cum,
type = "scatter",
mode = 'lines+markers',
name = "Death",
line = list(color = death_color),
marker = list(color = death_color)) %>%
plotly::layout(title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare")
plotly::plot_ly(data = df_daily) %>%
plotly::add_trace(x = ~ date,
y = ~ active_cum,
type = "scatter",
mode = "lines+markers",
name = "Active",
color = ~as.factor(State),
line = list(color = active_color),
marker = list(color = active_color)) %>%
plotly::add_trace(x = ~ date,
y = ~ confirmed_cum,
type = "scatter",
mode = "lines+markers",
name = "Confirmed",
line = list(color = confirmed_color),
marker = list(color = confirmed_color)) %>%
plotly::add_trace(x = ~ date,
y = ~ recovered_cum,
type = "scatter",
mode = "lines+markers",
name = "Recovered",
line = list(color = recovered_color),
marker = list(color = recovered_color)) %>%
plotly::add_trace(x = ~ date,
y = ~ death_cum,
type = "scatter",
mode = 'lines+markers',
name = "Death",
line = list(color = death_color),
marker = list(color = death_color)) %>%
plotly::layout(title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(y = ~ date,
x = ~ confirmed,
size = ~  log(confirmed),
sizes = c(5, 70),
type = 'scatter', mode = 'markers',
color = ~ State,
marker = list(sizemode = 'diameter' , opacity = 0.5),
hoverinfo = 'text',
text = ~paste("", State,
" Confi: ", confirmed,
" Recov: ", paste(round(100 * recover_rate, 1), "%", sep = ""),
" Death Rate: ",  paste(round(100 * death_rate, 1), "%", sep = ""))
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate", ticksuffix = "%"),
xaxis = list(title = "Death Rate", ticksuffix = "%",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(y = ~ date,
x = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ State,
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate", ticksuffix = "%"),
xaxis = list(title = "Death Rate", ticksuffix = "%",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(y = ~ date,
x = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ State,
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate", ticksuffix = "%"),
xaxis = list(title = "Death Rate", ticksuffix = "%",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(y = ~ date,
x = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date))
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date))
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(y = ~ date,
x = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(y = ~ date,
x = ~ total_cases,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(x = ~ date,
y = ~ confirmed,
type = 'line',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
scatter
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
dplyr::filter(type == "confirmed", date == max_date) %>%
dplyr::group_by(date, type)
indiadata %>%
dplyr::filter(type == "confirmed", date == max_date) %>%
dplyr::group_by(date, type) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
dplyr::arrange(total_cases) %>%
dplyr::mutate(State = factor(State, levels = State)) %>%
dplyr::ungroup() %>%
dplyr::top_n(n = 25, wt = total_cases) %>%
plotly::plot_ly(#x = ~ country,
#y = ~ total_cases,
x = ~ total_cases,
y = ~ State,
text = ~ total_cases,
textposition = 'auto',
type = "bar") %>%
plotly::layout(yaxis = list(title = "Number of Cases"),
xaxis = list(title = ""),
margin =  list(
l = 10,
r = 10,
b = 10,
t = 10,
pad = 2
))
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(x = ~ date,
y = ~ total_cases,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(date, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
plotly::plot_ly(data = df_daily
x = ~ date,
```{r}
plotly::plot_ly(data = df_daily,
x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
plotly::plot_ly(data = df_daily,
x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State, levels= "State"),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::group_by(date, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
plotly::plot_ly(data = df_tra,
x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
df_tra <- indiadata %>%
dplyr::group_by(date, type) %>%
dplyr::summarise(total = sum(cases, na.rm = TRUE)) %>%
tidyr::pivot_wider(names_from = type,values_from = total) %>%
dplyr::arrange(date) %>%
dplyr::ungroup() %>%
dplyr::mutate(active =  confirmed - death - recovered) %>%
dplyr::mutate(confirmed_cum = cumsum(confirmed),
death_cum = cumsum(death),
recovered_cum = cumsum(recovered),
active_cum = cumsum(active))
plotly::plot_ly(data = df_tra,
x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
plotly::plot_ly(x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
```{r}
plotly::plot_ly(data=indiadata, x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
plotly::plot_ly(data=indiadata, x = ~ date,
y = ~ death,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
head(date)
head(date)
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dp
indiadata %>%
#dplyr::filter(State != "Others") %>%
dplyr::group_by(State, type) %>%
dplyr::filter(date == max(date)) %>%
dplyr::summarise(total_cases = sum(cases)) %>%
tidyr::pivot_wider(names_from = type, values_from = total_cases) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
plotly::plot_ly(x = ~ date,
y = ~ confirmed,
type = 'scatter',
mode = 'markers',
color = ~ as.factor(State),
hoverinfo = 'text'
) %>%
plotly::layout(yaxis = list(title = "Recovery Rate"),
xaxis = list(title = "Death Rate",
dtick = 1,
tick0 = 0),
hovermode = "compare")
install.packages(c("dplyr", "flexdashboard", "magrittr", "plotly", "tidyr"))
setwd("C:/R/cdash")
install.packages(c("dplyr", "flexdashboard", "magrittr", "plotly", "tidyr"))
install.packages(c("dplyr", "flexdashboard", "magrittr", "plotly", "tidyr"))
